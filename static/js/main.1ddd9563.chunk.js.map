{"version":3,"sources":["ContextAPI/AppContext.js","Utils/generateLink.js","Components/LinkAccess.jsx","Components/AccessLink.jsx","Components/Header.jsx","Components/inputs/FormInput.jsx","Components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","generateLink","params","title","backgColor","icon","logoColor","LinkAccess","props","readyURL","className","href","target","rel","AccessLink","useContext","firstTime","Header","FormInput","setParams","setFirstTime","useState","inputParams","setInputParams","onChange","e","event","name","value","handleChange","htmlFor","type","id","placeholder","readOnly","onClick","Main","App","context","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ddd9563.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","const generateLink = (params) => {\r\n  const { title, backgColor, icon, logoColor } = params\r\n  const URL = `https://img.shields.io/badge/${title}-${backgColor}?style=for-the-badge&logo=${icon}&logoColor=${logoColor}`;\r\n  return URL;\r\n};\r\n\r\nexport default generateLink;\r\n","import React from 'react';\r\nimport '../Styles/LinkButton.css';\r\n\r\nfunction LinkAccess(props) {\r\n  const { readyURL, title } = props;\r\n\r\n  const link = <a\r\n    className=\"accessIconButton\"\r\n    href={readyURL}\r\n    target=\"_blank\"\r\n    rel=\"noreferrer\"\r\n  >\r\n    {`Acessar ícone de ${title}`}\r\n  </a>\r\n\r\n  return (link)\r\n}\r\n\r\nexport default LinkAccess;\r\n","import React from 'react';\r\nimport AppContext from '../ContextAPI/AppContext';\r\nimport generateLink from '../Utils/generateLink';\r\nimport '../Styles/IconMessage.css';\r\nimport LinkAccess from './LinkAccess';\r\n\r\nfunction AccessLink() {\r\n  const { params, firstTime } = React.useContext(AppContext);\r\n  const readyURL = generateLink(params);\r\n\r\n  const message = <p className='iconMessage'>Link de ícone ainda não gerado</p>;\r\n\r\n  return (\r\n    firstTime ?\r\n      message :\r\n      <LinkAccess readyURL={readyURL} title={params.title} />\r\n  )\r\n}\r\n\r\nexport default AccessLink\r\n","import React from 'react';\r\nimport '../Styles/Header.css';\r\n\r\nconst Header = function () {\r\n  return (\r\n    <header><h1 className='mainTitle'>\r\n      Portfolio Icon Maker\r\n      </h1></header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../Styles/FormInput.css';\r\nimport '../../Styles/Button.css';\r\nimport AppContext from '../../ContextAPI/AppContext';\r\n\r\nconst FormInput = function () {\r\n  const { setParams, setFirstTime } =  React.useContext(AppContext);\r\n\r\n  const [inputParams, setInputParams] = React.useState({\r\n    title: '',\r\n    backgColor: '',\r\n    icon: '',\r\n    logoColor: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputParams({ ...inputParams, [name]: value });\r\n  };\r\n\r\n  const sendParams = () => {\r\n    setParams(inputParams);\r\n    setFirstTime(false);\r\n    setInputParams({ \r\n    title: '',\r\n    backgColor: '',\r\n    icon: '',\r\n    logoColor: ''\r\n  })\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <form onChange={ (e) => handleChange(e)} className=\"formInput\">\r\n      <label className=\"inputLabel\" htmlFor=\"title\">\r\n        <span className='inputTitle'>Título</span>\r\n        <input\r\n          className=\"input\"\r\n          type=\"text\" \r\n          name=\"title\" \r\n          id=\"title\"\r\n          placeholder=\"Ex: google\"\r\n          readOnly={false}\r\n          value={inputParams.title}\r\n        />\r\n      </label>\r\n      \r\n\r\n      <label className=\"inputLabel\" htmlFor=\"backgColor\">\r\n        <span className='inputTitle'>Cor de fundo</span>\r\n        <input\r\n          className=\"input\" \r\n          type=\"text\" \r\n          name=\"backgColor\" \r\n          id=\"backgColor\"\r\n          readOnly={false}\r\n          placeholder=\"Inglês ou hexadecimal(sem #)\"\r\n          value={inputParams.backgColor}\r\n        />\r\n      </label>\r\n      \r\n\r\n      <label className=\"inputLabel\" htmlFor=\"icon\">\r\n        <span className='inputTitle'>Ícone</span>\r\n        <input\r\n          className=\"input\" \r\n          type=\"text\" \r\n          name=\"icon\"\r\n          id=\"icon\"\r\n          placeholder=\"Ex: google\"\r\n          readOnly={false}\r\n          value={inputParams.icon}\r\n        />\r\n      </label>\r\n      \r\n\r\n      <label className=\"inputLabel\" htmlFor=\"logoColor\">\r\n        <span className='inputTitle'>Cor do ícone</span>\r\n      <input\r\n        className=\"input\" \r\n        type=\"text\" \r\n        name=\"logoColor\" \r\n        id=\"logoColor\"\r\n        placeholder=\"Inglês ou hexadecimal (sem #)\"\r\n        readOnly={false}\r\n        value={inputParams.logoColor}\r\n      />\r\n      </label>\r\n    </form>\r\n    <button\r\n        type=\"button\"\r\n        onClick={() => sendParams()}\r\n        className=\"createIconButton\"\r\n      >\r\n        Criar ícone\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport AccessLink from './AccessLink';\r\nimport Header from './Header';\r\nimport FormInput from './inputs/FormInput';\r\n\r\nconst Main = function () {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <FormInput />\r\n      <AccessLink />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/Main';\nimport AppContext from './ContextAPI/AppContext';\n\nconst App = function () {\n  const [params, setParams] = React.useState({});\n  const [firstTime, setFirstTime] = React.useState(true);\n\n  const context = {\n    params, setParams,\n    firstTime, setFirstTime,\n  }\n\n  return <div className=\"App\">\n    <AppContext.Provider value={ context }>\n      <Main />\n    </AppContext.Provider>\n  </div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}