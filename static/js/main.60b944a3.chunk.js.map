{"version":3,"sources":["ContextAPI/AppContext.js","Utils/generateLink.js","Components/LinkAccess.jsx","Components/AccessLink.jsx","Components/Header.jsx","Components/IconInputs.jsx","Components/inputs/FormInput.jsx","Components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","generateLink","params","title","backgColor","icon","logoColor","LinkAccess","props","readyURL","useState","copy","setCopy","Button","styled","button","onClick","navigator","clipboard","writeText","setTimeout","AccessLink","useContext","firstTime","Header","className","FormInput","input","IconInputs","inputParams","emptyColor","disabledInput","setDisabledInput","manageIconColorInput","e","a","value","target","htmlFor","id","onChange","type","name","placeholder","autoComplete","disabled","ButtonOptions","setParams","setFirstTime","setInputParams","filled","setFilled","editableIcon","setEditableIcon","iconInput","useEffect","style","boxShadow","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","display","event","handleChange","readOnly","Transition","in","timeout","state","backgroundColor","justifyContent","padding","Main","App","context","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60b944a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","const generateLink = (params) => {\r\n  const { title, backgColor, icon, logoColor } = params\r\n  const URL = `https://img.shields.io/badge/${title}-${backgColor}?style=for-the-badge&logo=${icon}&logoColor=${logoColor}`;\r\n  return URL;\r\n};\r\n\r\nexport default generateLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction LinkAccess(props) {\r\n  const { readyURL, title } = props;\r\n  const [copy, setCopy] = React.useState(false);\r\n\r\n  const Button = styled.button`\r\n    display: block;\r\n    color: aliceblue;\r\n    ${ copy ? 'font-weight: bold;' : '' }\r\n    text-align: center;\r\n    font-size: 16px;\r\n    width: 220px;\r\n    background-color: #4CAF50;;\r\n    border-radius: 5px;\r\n    margin: 10px auto;\r\n    text-decoration: none;\r\n    height: 50px;\r\n    border-style: none;\r\n    &:hover {\r\n      background-color: #3e8e41;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:active {\r\n      transform: scale(0.9);\r\n    }\r\n  `;\r\n\r\n  // https://stackoverflow.com/questions/39501289/in-reactjs-how-to-copy-text-to-clipboard\r\n  const copyToClipBoard  = () => {\r\n    navigator.clipboard.writeText(readyURL);\r\n    setCopy(true);\r\n    setTimeout(() => {\r\n      setCopy(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      onClick={ () => copyToClipBoard() }\r\n    >\r\n      { copy ? 'Copiado! ✅' : `Copiar link de ${title}` }\r\n    </Button>\r\n    );\r\n}\r\n\r\nexport default LinkAccess;\r\n","import React from 'react';\r\nimport AppContext from '../ContextAPI/AppContext';\r\nimport generateLink from '../Utils/generateLink';\r\n// import '../Styles/IconMessage.css';\r\nimport LinkAccess from './LinkAccess';\r\n\r\nfunction AccessLink() {\r\n  const { params, firstTime } = React.useContext(AppContext);\r\n  const readyURL = generateLink(params);\r\n\r\n  return (\r\n    !firstTime && <LinkAccess readyURL={readyURL} title={params.title} />\r\n  )\r\n}\r\n\r\nexport default AccessLink\r\n","import React from 'react';\r\nimport '../Styles/Header.css';\r\n\r\nconst Header = function () {\r\n  return (\r\n    <header><h1 className='mainTitle'>\r\n      Portfolio Icon Maker\r\n      </h1></header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst FormInput = styled.input`\r\n  &:disabled {\r\n    background-color: #ad8989;\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nfunction IconInputs(props) {\r\n  const { inputParams, emptyColor } = props;\r\n  const [disabledInput, setDisabledInput] = React.useState(true);\r\n\r\n  const manageIconColorInput = async (e) => {\r\n    const { value } = e.target;\r\n\r\n    if (value === '') {\r\n      setDisabledInput(true);\r\n    } else {\r\n      setDisabledInput(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <label className=\"inputLabel\" htmlFor=\"icon\" id=\"icon-field\">\r\n        <span className='inputTitle'>\r\n          Ícone de exibição\r\n        </span>\r\n        <FormInput\r\n          className=\"input\"\r\n          onChange={(e) => manageIconColorInput(e)}\r\n          type=\"text\"\r\n          name=\"icon\"\r\n          id=\"icon\"\r\n          placeholder=\"Ex: google\"\r\n          {...emptyColor}\r\n          value={inputParams.icon}\r\n          autoComplete=\"off\"\r\n        />\r\n      </label>\r\n\r\n      <label className=\"inputLabel\" htmlFor=\"logoColor\">\r\n        <span className='inputTitle'>\r\n          Cor do ícone\r\n        </span>\r\n        <FormInput\r\n          className=\"input\"\r\n          type=\"text\"\r\n          name=\"logoColor\"\r\n          id=\"logoColor\"\r\n          placeholder=\"Cor em inglês ou hexadecimal (sem #)\"\r\n          value={inputParams.logoColor}\r\n          autoComplete=\"off\"\r\n          disabled={disabledInput}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IconInputs;\r\n","import React from 'react';\r\nimport '../../Styles/FormInput.css';\r\nimport '../../Styles/Button.css';\r\nimport AppContext from '../../ContextAPI/AppContext';\r\nimport IconInputs from '../IconInputs';\r\nimport styled from 'styled-components';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst ButtonOptions = styled.button`\r\n  background-color: #4CAF50;\r\n  border: none;\r\n  color: rgb(255, 255, 255);\r\n  padding: 15px 0;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  -webkit-transition-duration: 0.4s; /* Safari */\r\n  transition-duration: 0.4s;\r\n  border-radius: 5px;\r\n  border: 1px solid #4CAF50;\r\n  width: 220px;\r\n  // margin: 4px auto;\r\n\r\n  &:hover {\r\n      background-color: rgb(255, 255, 255);\r\n      color: #4CAF50;\r\n  }\r\n`;\r\n\r\nconst FormInput = function () {\r\n  const { setParams, setFirstTime } =  React.useContext(AppContext);\r\n\r\n  const [inputParams, setInputParams] = React.useState({\r\n    title: '',\r\n    backgColor: '',\r\n    icon: '',\r\n    logoColor: '',\r\n  });\r\n\r\n  const [filled, setFilled] = React.useState(false);\r\n  const [editableIcon, setEditableIcon] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputParams({ ...inputParams, [name]: value });    \r\n  };\r\n\r\n  const iconInput = inputParams.icon;\r\n  React.useEffect(() => {\r\n    if(iconInput === '') {\r\n      setInputParams({ ...inputParams, logoColor: '' });\r\n    }\r\n  } , [iconInput]);\r\n\r\n  const sendParams = () => {\r\n    if (\r\n      !inputParams.title      ||\r\n      !inputParams.backgColor ||\r\n      (!inputParams.icon && editableIcon)) {\r\n      setFilled(true);\r\n      setTimeout(() => {\r\n        setFilled(false);\r\n      }, 3000);\r\n    } else {\r\n      setParams(inputParams);\r\n      setFirstTime(false);\r\n      setInputParams({ \r\n      title: '',\r\n      backgColor: '',\r\n      icon: '',\r\n      logoColor: ''\r\n    });\r\n    }\r\n  };\r\n\r\n  const IconFormFunction = () => {\r\n    setEditableIcon(!editableIcon);\r\n\r\n    if (!editableIcon) {\r\n      setInputParams({\r\n        ...inputParams,\r\n        icon: '',\r\n        logoColor: ''\r\n      });\r\n    };\r\n  };\r\n\r\n  const style = { boxShadow: '0 0 1px 1px red' };\r\n\r\n  /** https://reactcommunity.org/react-transition-group/transition */\r\n  const defaultStyle = {\r\n    transition: `opacity ${200}ms ease-in-out`,\r\n    opacity: 0,\r\n  }\r\n  \r\n  const transitionStyles = {\r\n    entering: { opacity: 0.5 },\r\n    entered:  { opacity: 1 },\r\n    exiting:  { opacity: 0.5 },\r\n    exited:  { display: 'none' },\r\n  };\r\n  /** */\r\n\r\n  return (\r\n    <>\r\n    <form onChange={ (e) => handleChange(e)} className=\"formInput\">\r\n      <label className=\"inputLabel\" htmlFor=\"title\">\r\n        <span className='inputTitle'>Título</span>\r\n        <input\r\n          { ...filled && !inputParams.title ? { style } : null }\r\n          className=\"input\"\r\n          type=\"text\" \r\n          name=\"title\" \r\n          id=\"title\"\r\n          placeholder=\"Ex: google\"\r\n          readOnly={false}\r\n          value={inputParams.title}\r\n        />\r\n      </label>\r\n      <label className=\"inputLabel\" htmlFor=\"backgColor\">\r\n        <span className='inputTitle'>Cor de fundo</span>\r\n        <input\r\n          { ...filled && !inputParams.backgColor ? { style } : null }\r\n          className=\"input\" \r\n          type=\"text\" \r\n          name=\"backgColor\" \r\n          id=\"backgColor\"\r\n          readOnly={false}\r\n          placeholder=\"Cor em inglês ou hexadecimal (sem #)\"\r\n          value={inputParams.backgColor}\r\n        />\r\n      </label>\r\n        <Transition in={editableIcon} timeout={200}>\r\n          {(state) => (\r\n            <div style={{ ...defaultStyle, ...transitionStyles[state]}}>\r\n              <IconInputs\r\n                state={state}\r\n                style={{backgroundColor: 'black'}}\r\n                inputParams={ inputParams }\r\n                setInputParams={ setInputParams }\r\n                emptyColor={ filled && !inputParams.icon ? { style } : null}\r\n              />\r\n            </div>\r\n          )}\r\n        </Transition>\r\n        <div style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-around',\r\n          padding: '10px 0',\r\n\r\n        }}>\r\n\r\n      <ButtonOptions\r\n        type=\"button\"\r\n        onClick={ () => IconFormFunction() }>\r\n         {`${ editableIcon ? 'Desabilitar opção de' : 'Habilitar opção de' }`} ícones\r\n      </ButtonOptions>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => sendParams()}\r\n        className=\"createIconButton\"\r\n      >\r\n        Criar ícone\r\n      </button>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\nimport AccessLink from './AccessLink';\r\nimport Header from './Header';\r\nimport FormInput from './inputs/FormInput';\r\n\r\nconst Main = function () {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <FormInput />\r\n      <AccessLink />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\nimport Main from './Components/Main';\nimport AppContext from './ContextAPI/AppContext';\n\nconst App = function () {\n  const [params, setParams] = React.useState({});\n  const [firstTime, setFirstTime] = React.useState(true);\n\n  const context = {\n    params, setParams,\n    firstTime, setFirstTime,\n  }\n\n  return <div className=\"App\">\n    <AppContext.Provider value={ context }>\n      <Main />\n    </AppContext.Provider>\n  </div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}